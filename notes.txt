mesen tracelog exclude loop:

(pc < $800a || pc > $8015) && (pc < $99ee || pc > $9a15 )

****

L855C/L855F - tables with low/high bytes of top left corner of player1, player2 & coop

*****

0 - no tetromino
1 - I
2 - T
3 - O
4 - J
5 - L
6 - S
7 - Z

$52 (pieceStatistics) gets a zero stored in it but doesn't seem to be read

****

L9997 - line clear stat columns
999B - maximum height of column

****

L95C6 - probably start of demo
L95E3 - start of game?
L8565 - plant pieces in playfield



playfield is stored with 1 tile per nibble.  nibble aligns with tile index.  0 is clear.
walls are built with F0 on left, 0F on right
Floor is built with FF

****

add longbar:
down down left right left right b a

level up:
up down up down left right b b a

remove block:
left, down, right, up, left, down, right, b, a

****

L836B - @rightNotPressed
doSomethingWithInputDuringGameplay - is maybe get filtered input?  it leaves buttons in A

8327 - if fall timer is 0, down is pressed for you

L8650 - checkPosition after shifting/rotating and then do something else

L8C15 - probably the checkPosition

L8CA7 - negative3 thru 3

**********

orientation table is 2 bytes for 16 possible locations, 1 bit per tile

Example T Down:

0000 0
1110 E
0100 4
0000 0

would be: $0E,$40

Need to learn more about the order of orienations, but these replacements allow for T spins. Unforunately the rotation is backwards with it.

orientationForT:
        .byte   $0E,$40,$4C,$40,$4E,$00,$46,$40 ; 86D3 E4 00 8C 80 4E 00 4C 40  ....N.L@

tilesForT:
        .byte   $01,$09,$03,$06,$04,$01,$0A,$06 ; 8713 01 09 03 06 04 08 03 06  ........
        .byte   $04,$01,$07,$03,$04,$08,$03,$06 ; 871B 04 01 07 03 04 01 0A 06  ........

*********

LB65D - game background modification address table

******

drawCathedralSprites has a table of sprite information, but is obfuscated.
possibly result of porting from arcade version?

; in:  $02,$03,$CF,$01
; out: $6F,$02,$03,$78 (y,t,a,x)

; 0xCF << 3 & 0xFF = 0x78
; ((( 0x01 << 8  | 0xCF ) >> 2 ) & 0xF8) - 1 = 0x6F
